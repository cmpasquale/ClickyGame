{"ast":null,"code":"var _jsxFileName = \"/Users/ceciliapasquale/Documents/ClassActivities/ClickyGame/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Cards from './components/CardsFriends/card';\nimport images from './clicky-images.json';\nimport Wrapper from './components/Wrapper/wraper';\nimport Title from './components/Title/title';\nimport Jumbotron from './components/Jumbotron/jumbotron';\nimport './App.css';\n\nfunction shuffleImages(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\n;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images,\n      highScore: 0,\n      currentScore: 0,\n      clicked: []\n    };\n\n    this.handleclick = id => {\n      if (this.state.clicked.indexOf(id) === -1) {\n        this.handleIncrement();\n        this.setState({\n          clicked: this.state.clicked.concat(id)\n        });\n      } else {\n        this.handleReset();\n      }\n    };\n\n    this.handleIncrement = () => {\n      const newScore = this.state.currentScore + 1;\n      this.setState({\n        currentScore: newScore,\n        message: \"Guessed Right! Now try again and let's see what happens.\"\n      });\n\n      if (newScore >= this.state.highScore) {\n        this.setState({\n          highScore: newScore\n        });\n      }\n\n      this.handleShuffle();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        currentScore: 0,\n        highScore: this.state.highScore,\n        message: \"Oooohhhh, Unlucky!\",\n        clicked: []\n      });\n      this.handleShuffle();\n    };\n\n    this.handleShuffle = () => {\n      let shuffledImages = shuffleImages(images);\n      this.setState({\n        images: shuffledImages\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.images);\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      title: \"Clicky-Game\",\n      score: this.state.currentScore,\n      highScore: this.state.highScore,\n      message: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.state.images.map(image => React.createElement(Cards, {\n      key: image.id,\n      handleclick: this.handleclick,\n      handleIncrement: this.handleIncrement,\n      handleReset: this.handleReset,\n      handleShuffle: this.handleShuffle,\n      id: image.id,\n      image: image.image,\n      name: image.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ceciliapasquale/Documents/ClassActivities/ClickyGame/src/App.js"],"names":["React","Component","Cards","images","Wrapper","Title","Jumbotron","shuffleImages","array","i","length","j","Math","floor","random","App","state","highScore","currentScore","clicked","handleclick","id","indexOf","handleIncrement","setState","concat","handleReset","newScore","message","handleShuffle","shuffledImages","componentDidMount","console","log","render","map","image","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Cards from  './components/CardsFriends/card';\nimport images from  './clicky-images.json';\nimport Wrapper from './components/Wrapper/wraper';\nimport Title from './components/Title/title';\nimport Jumbotron from './components/Jumbotron/jumbotron'\nimport './App.css';\n\nfunction shuffleImages (array) {\n  for (let i = array.length - 1; i> 0; i--)\n  {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n\n  state={\n    images,\n    highScore: 0,\n    currentScore: 0,\n    clicked: []\n  };\n\n  componentDidMount(){\n    console.log(this.state.images)\n\n  }\n \n\n\n  \n\n\n  handleclick = id =>\n{\n  if (this.state.clicked.indexOf(id) === -1)\n  {\n    this.handleIncrement();\n    this.setState({\n      clicked: this.state.clicked.concat(id)\n    })\n  } else\n  {\n    this.handleReset();\n  } \n  };\n\n  handleIncrement = () => \n  {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      message: \"Guessed Right! Now try again and let's see what happens.\"\n    });\n    if (newScore >= this.state.highScore)\n    {\n      this.setState({\n        highScore: newScore\n      });\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState ({\n      currentScore: 0,\n      highScore: this.state.highScore,\n      message: \"Oooohhhh, Unlucky!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n  \n  handleShuffle = () => {\n    let shuffledImages = shuffleImages(images);\n    this.setState({\n      images: shuffledImages\n    });\n  };\n\n\n  render (){\n    return(\n\n     \n      <Wrapper>\n      <Jumbotron\n        title = \"Clicky-Game\"\n        score = {this.state.currentScore}\n        highScore = {this.state.highScore}\n        message = {this.state.message}\n        />\n      \n\n        {this.state.images.map(image =>(\n        <Cards\n          key = {image.id}\n          handleclick = {this.handleclick}\n          handleIncrement = {this.handleIncrement}\n          handleReset = {this.handleReset}\n          handleShuffle = {this.handleShuffle}\n          id = {image.id}\n          image = {image.image}\n          name = {image.name}\n        />\n        ))}\n      </Wrapper>\n\n  \n    )\n}\n\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}